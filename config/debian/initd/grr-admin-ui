#! /bin/sh
### BEGIN INIT INFO
# Provides:          grr_admin_ui
# Required-Start:    $network $named $remote_fs $syslog
# Required-Stop:     $network $named $remote_fs $syslog
# Should-Start:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       GRR Rapid Response adminstration user interface
### END INIT INFO

PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin";
DAEMON="grr_admin_ui.py";
DAEMON_OPTS="--config=/etc/grr/grr-admin-ui.conf";
NAME="grr-admin-ui";
DESC="GRR Rapid Response adminstration user interface";
DEFAULTFILE="/etc/default/${NAME}";
PIDFILE="/var/run/${NAME}.pid";

if [ -x "/usr/sbin/${DAEMON}" ] ; then
	DAEMON="/usr/sbin/${DAEMON}";
elif [ -x "/usr/local/sbin/${DAEMON}" ] ; then
	DAEMON="/usr/local/sbin/${DAEMON}";
else
	exit 0;
fi

[ -r ${DEFAULTFILE} ] && . ${DEFAULTFILE}

. /lib/lsb/init-functions

is_true() {
	if [ "x$1" = "xtrue" -o "x$1" = "xyes" -o "x$1" = "x0" ] ; then
		return 0
	else
		return 1
	fi
}

reload_grr_admin_ui() {
	start-stop-daemon --stop \
	--quiet \
	--pidfile ${PIDFILE} \
	--signal HUP
}

start_grr_admin_ui() {
	if is_true "$START" ; then
		start-stop-daemon --start \
		--quiet \
		--background \
		--make-pidfile \
		--pidfile ${PIDFILE} \
		--startas ${DAEMON} -- ${DAEMON_OPTS}
	else
		echo ""
		echo "${DESC} not configured to start, please edit ${DEFAULTFILE} to enable"
	fi
}

stop_grr_admin_ui() {
	start-stop-daemon --stop \
	--quiet \
	--oknodo \
	--pidfile ${PIDFILE}
}

status_grr_admin_ui() {
	status_of_proc -p "${PIDFILE}" "${DAEMON}" "${NAME}"
}

case "$1" in
	start)
		log_begin_msg "Starting ${DESC}"
		start_grr_admin_ui
		log_end_msg $?
		;;
	stop)
		log_begin_msg "Stopping ${DESC}"
		stop_grr_admin_ui
		log_end_msg $?
		;;
	reload)
		log_begin_msg "Reloading ${DESC}"
		reload_grr_admin_ui
		log_end_msg $?
		;;
	status)
		status_grr_admin_ui
		;;
	restart|force-reload)
		log_begin_msg "Restarting ${DESC}"
		stop_grr_admin_ui
		sleep 1
		start_grr_admin_ui
		log_end_msg $?
		;;
	*)
		echo "Usage: $0 {start|stop|status|restart|force-reload|reload}" >&2
		exit 1
		;;
esac

