# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grr/proto/sysinfo.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


import grr.proto.jobs_pb2
import grr.proto.semantic_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='grr/proto/sysinfo.proto',
  package='',
  serialized_pb='\n\x17grr/proto/sysinfo.proto\x1a\x14grr/proto/jobs.proto\x1a\x18grr/proto/semantic.proto\"\x97\x04\n\x07Process\x12\x0b\n\x03pid\x18\x01 \x01(\r\x12\x0c\n\x04ppid\x18\x02 \x01(\r\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x0b\n\x03\x65xe\x18\x04 \x01(\t\x12\x0f\n\x07\x63mdline\x18\x05 \x03(\t\x12\r\n\x05\x63time\x18\x06 \x01(\x04\x12\x10\n\x08real_uid\x18\x07 \x01(\r\x12\x15\n\reffective_uid\x18\x08 \x01(\r\x12\x11\n\tsaved_uid\x18\t \x01(\r\x12\x10\n\x08real_gid\x18\n \x01(\r\x12\x15\n\reffective_gid\x18\x0b \x01(\r\x12\x11\n\tsaved_gid\x18\x0c \x01(\r\x12\x10\n\x08username\x18\r \x01(\t\x12\x10\n\x08terminal\x18\x0e \x01(\t\x12\x0e\n\x06status\x18\x0f \x01(\t\x12\x0c\n\x04nice\x18\x10 \x01(\x05\x12\x0b\n\x03\x63wd\x18\x11 \x01(\t\x12\x13\n\x0bnum_threads\x18\x12 \x01(\r\x12\x15\n\ruser_cpu_time\x18\x13 \x01(\x02\x12\x17\n\x0fsystem_cpu_time\x18\x14 \x01(\x02\x12\x13\n\x0b\x63pu_percent\x18\x15 \x01(\x02\x12\x10\n\x08RSS_size\x18\x16 \x01(\x04\x12\x10\n\x08VMS_size\x18\x17 \x01(\x04\x12\x16\n\x0ememory_percent\x18\x18 \x01(\x02\x12\x12\n\nopen_files\x18\x19 \x03(\t\x12\'\n\x0b\x63onnections\x18\x1a \x03(\x0b\x32\x12.NetworkConnection:\x1c\xda\xfc\xe3\xc4\x01\x16\n\x14Process information.\"+\n\x0fNetworkEndpoint\x12\n\n\x02ip\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\"\xde\x04\n\x11NetworkConnection\x12)\n\x06\x66\x61mily\x18\x01 \x01(\x0e\x32\x19.NetworkConnection.Family\x12\x35\n\x04type\x18\x02 \x01(\x0e\x32\x17.NetworkConnection.Type:\x0eUNKNOWN_SOCKET\x12\'\n\rlocal_address\x18\x03 \x01(\x0b\x32\x10.NetworkEndpoint\x12(\n\x0eremote_address\x18\x04 \x01(\x0b\x32\x10.NetworkEndpoint\x12\x30\n\x05state\x18\x05 \x01(\x0e\x32\x18.NetworkConnection.State:\x07UNKNOWN\x12\x0b\n\x03pid\x18\x06 \x01(\r\x12\r\n\x05\x63time\x18\x07 \x01(\x04\";\n\x06\x46\x61mily\x12\x08\n\x04INET\x10\x02\x12\t\n\x05INET6\x10\n\x12\r\n\tINET6_WIN\x10\x17\x12\r\n\tINET6_OSX\x10\x1e\";\n\x04Type\x12\x12\n\x0eUNKNOWN_SOCKET\x10\x00\x12\x0f\n\x0bSOCK_STREAM\x10\x01\x12\x0e\n\nSOCK_DGRAM\x10\x02\"\xcb\x01\n\x05State\x12\x0b\n\x07UNKNOWN\x10\x00\x12\n\n\x06\x43LOSED\x10\x01\x12\n\n\x06LISTEN\x10\x02\x12\x0c\n\x08SYN_SENT\x10\x03\x12\x0c\n\x08SYN_RECV\x10\x04\x12\x0f\n\x0b\x45STABLISHED\x10\x05\x12\r\n\tFIN_WAIT1\x10\x06\x12\r\n\tFIN_WAIT2\x10\x07\x12\x0e\n\nCLOSE_WAIT\x10\x08\x12\x0b\n\x07\x43LOSING\x10\t\x12\x0c\n\x08LAST_ACK\x10\n\x12\r\n\tTIME_WAIT\x10\x0b\x12\x0e\n\nDELETE_TCB\x10\x0c\x12\x08\n\x04NONE\x10\r\"N\n\nFilesystem\x12\x0e\n\x06\x64\x65vice\x18\x01 \x01(\t\x12\x13\n\x0bmount_point\x18\x02 \x01(\t\x12\x0c\n\x04type\x18\x03 \x01(\t\x12\r\n\x05label\x18\x04 \x01(\t\"1\n\x07MRUFile\x12\x10\n\x08\x66ilename\x18\x01 \x01(\t\x12\x14\n\ttimestamp\x18\x02 \x01(\x04:\x01\x30\"C\n\x06RunKey\x12\x0f\n\x07keyname\x18\x01 \x01(\t\x12\x10\n\x08\x66ilepath\x18\x02 \x01(\t\x12\x16\n\x0blastwritten\x18\x03 \x01(\x04:\x01\x30\"\xac\x0e\n\x19WindowsServiceInformation\x12.\n\x04name\x18\x01 \x01(\tB \xe2\xfc\xe3\xc4\x01\x1a\x12\x18The name of the service.\x12\x43\n\x0b\x64\x65scription\x18\x02 \x01(\tB.\xe2\xfc\xe3\xc4\x01(\x12&The description string of the service.\x12\x84\x01\n\x06\x62inary\x18\x03 \x01(\x0b\x32\n.StatEntryBh\xe2\xfc\xe3\xc4\x01\x62\x12`The binary on the client. This may also contain an AFF4 urn to the server copy of the same file.\x12\x34\n\x05state\x18\x04 \x01(\tB%\xe2\xfc\xe3\xc4\x01\x1f\x12\x1d\x43urrent state of the service.\x12U\n\x0fwmi_information\x18\x05 \x01(\x0b\x32\x05.DictB5\xe2\xfc\xe3\xc4\x01/\x12-Additional information available through WMI.\x12T\n\x0c\x64isplay_name\x18\x06 \x01(\tB>\xe2\xfc\xe3\xc4\x01\x38\x12\x36\x44isplayed name of the service in Windows GUI controls.\x12\x44\n\x11\x64river_package_id\x18\x07 \x01(\tB)\xe2\xfc\xe3\xc4\x01#\x12!Driver Package ID of the service.\x12~\n\rerror_control\x18\x08 \x01(\x0e\x32\'.WindowsServiceInformation.ErrorControlB>\xe2\xfc\xe3\xc4\x01\x38\x12\x36\x42\x65haviour of the service on failure to load/initialize\x12\x35\n\nimage_path\x18\t \x01(\tB!\xe2\xfc\xe3\xc4\x01\x1b\x12\x19ImagePath of the service.\x12\x37\n\x0bobject_name\x18\n \x01(\tB\"\xe2\xfc\xe3\xc4\x01\x1c\x12\x1aObjectName of the service.\x12[\n\x0cstartup_type\x18\x0b \x01(\x0e\x32&.WindowsServiceInformation.ServiceModeB\x1d\xe2\xfc\xe3\xc4\x01\x17\x12\x15Service start options\x12Z\n\x0cservice_type\x18\x0c \x01(\x0e\x32&.WindowsServiceInformation.ServiceTypeB\x1c\xe2\xfc\xe3\xc4\x01\x16\x12\x14Type of the service.\x12l\n\ngroup_name\x18\r \x01(\tBX\xe2\xfc\xe3\xc4\x01R\x12PSpecifies the name of the load ordering group of which this service is a member.\x12I\n\x0bservice_dll\x18\x0e \x01(\tB4\xe2\xfc\xe3\xc4\x01.\x12,Name of the DLL instantiated in the service.\x12U\n\x0cregistry_key\x18\x0f \x01(\tB?\xe2\xfc\xe3\xc4\x01\x39\n\x06RDFURN\x12/The AFF4 location for the service registry key.\"@\n\x0c\x45rrorControl\x12\x0c\n\x08\x43RITICAL\x10\x03\x12\n\n\x06SEVERE\x10\x02\x12\n\n\x06NORMAL\x10\x01\x12\n\n\x06IGNORE\x10\x00\"\x87\x01\n\x0bServiceMode\x12\x16\n\x12SERVICE_BOOT_START\x10\x00\x12\x18\n\x14SERVICE_SYSTEM_START\x10\x01\x12\x16\n\x12SERVICE_AUTO_START\x10\x02\x12\x18\n\x14SERVICE_DEMAND_START\x10\x03\x12\x14\n\x10SERVICE_DISABLED\x10\x04\"\xa2\x01\n\x0bServiceType\x12\x19\n\x15SERVICE_KERNEL_DRIVER\x10\x01\x12\x1e\n\x1aSERVICE_FILE_SYSTEM_DRIVER\x10\x02\x12\x18\n\x14SERVICE_ADAPTER_ARGS\x10\x04\x12\x1d\n\x19SERVICE_WIN32_OWN_PROCESS\x10\x10\x12\x1f\n\x1bSERVICE_WIN32_SHARE_PROCESS\x10 :\xbf\x01\xda\xfc\xe3\xc4\x01\xb8\x01\n\xb5\x01\x44\x65scribe a windows service or driver. Field names follow the cybox naming scheme where possible: http://cybox.mitre.org/language/version2.0.1/xsddocs/objects/Win_Service_Object.html\"\xce\x06\n\x15OSXServiceInformation\x12%\n\x05label\x18\x01 \x01(\tB\x16\xe2\xfc\xe3\xc4\x01\x10\x12\x0eService label.\x12\x39\n\x07program\x18\x02 \x01(\tB(\xe2\xfc\xe3\xc4\x01\"\x12 Program path run by the service.\x12W\n\x04\x61rgs\x18\x03 \x03(\tBI\xe2\xfc\xe3\xc4\x01\x43\x12\x41Program args.  May also include executable if Program is not set.\x12(\n\x03pid\x18\x04 \x01(\x04\x42\x1b\xe2\xfc\xe3\xc4\x01\x15\x12\x13\x43urrent service PID\x12P\n\x0bsessiontype\x18\x05 \x01(\tB;\xe2\xfc\xe3\xc4\x01\x35\x12\x33SessionType: Aqua|StandardIO|Background|LoginWindow\x12\x41\n\x0elastexitstatus\x18\x06 \x01(\x04\x42)\xe2\xfc\xe3\xc4\x01#\x12!Last exit return code of service.\x12)\n\x07timeout\x18\x07 \x01(\x04\x42\x18\xe2\xfc\xe3\xc4\x01\x12\x12\x10Service timeout.\x12\x44\n\x08ondemand\x18\x08 \x01(\x08\x42\x32\xe2\xfc\xe3\xc4\x01,\x12*True if the service should start ondemand.\x12\x45\n\x0bmachservice\x18\t \x03(\tB0\xe2\xfc\xe3\xc4\x01*\x12(Machservices advertised by this service.\x12K\n\x11perjobmachservice\x18\n \x03(\tB0\xe2\xfc\xe3\xc4\x01*\x12(Machservices advertised by this service.\x12\x35\n\x06socket\x18\x0b \x03(\tB%\xe2\xfc\xe3\xc4\x01\x1f\x12\x1dSockets used by this service.\x12G\n\x05plist\x18\x0f \x01(\tB8\xe2\xfc\xe3\xc4\x01\x32\n\x06RDFURN\x12(The AFF4 location for the service plist.:6\xda\xfc\xe3\xc4\x01\x30\n.Describe an OS X service (launchagent/daemon).\"\xa3\x02\n\x0fSoftwarePackage\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07version\x18\x02 \x01(\t\x12\x14\n\x0c\x61rchitecture\x18\x03 \x01(\t\x12\x11\n\tpublisher\x18\x04 \x01(\t\x12=\n\rinstall_state\x18\x05 \x01(\x0e\x32\x1d.SoftwarePackage.InstallState:\x07UNKNOWN\x12\x13\n\x0b\x64\x65scription\x18\x06 \x01(\t\x12\x14\n\x0cinstalled_on\x18\x07 \x01(\x04\x12\x14\n\x0cinstalled_by\x18\x08 \x01(\t\"H\n\x0cInstallState\x12\r\n\tINSTALLED\x10\x00\x12\x0b\n\x07PENDING\x10\x01\x12\x0f\n\x0bUNINSTALLED\x10\x02\x12\x0b\n\x07UNKNOWN\x10\x03\"\x93\x04\n\x12\x42rowserHistoryItem\x12%\n\x03url\x18\x01 \x01(\tB\x18\xe2\xfc\xe3\xc4\x01\x12\x12\x10The URL visited.\x12-\n\x06\x64omain\x18\x02 \x01(\tB\x1d\xe2\xfc\xe3\xc4\x01\x17\x12\x15\x44omain name accessed.\x12\x44\n\x0b\x61\x63\x63\x65ss_time\x18\x03 \x01(\x04\x42/\xe2\xfc\xe3\xc4\x01)\n\x0bRDFDatetime\x12\x1aTime the URL was accessed.\x12\x36\n\x08referrer\x18\x04 \x01(\tB$\xe2\xfc\xe3\xc4\x01\x1e\x12\x1cReferrer used for the access\x12@\n\x05title\x18\x05 \x01(\tB1\xe2\xfc\xe3\xc4\x01+\x12)Title attribute of the page if available.\x12X\n\x0cprogram_name\x18\x06 \x01(\tBB\xe2\xfc\xe3\xc4\x01<\x12:Name of the program that generated the entry, e.g. Chrome.\x12T\n\nsource_urn\x18\x07 \x01(\tB@\xe2\xfc\xe3\xc4\x01:\n\x06RDFURN\x12\x30Location of object that this entry was found in.\x12\x37\n\rdownload_path\x18\x08 \x01(\tB \xe2\xfc\xe3\xc4\x01\x1a\x12\x18Path of downloaded file.\"\xb8\r\n\x06Volume\x12\x39\n\nis_mounted\x18\x01 \x01(\x08\x42%\xe2\xfc\xe3\xc4\x01\x1f\x12\x1dTrue if the volume is mounted\x12,\n\x04name\x18\x02 \x01(\tB\x1e\xe2\xfc\xe3\xc4\x01\x18\x12\x16The name of the volume\x12^\n\x0b\x64\x65vice_path\x18\x03 \x01(\tBI\xe2\xfc\xe3\xc4\x01\x43\x12\x41\x46ull path to the volume, including the device on which it resides\x12K\n\x10\x66ile_system_type\x18\x04 \x01(\tB1\xe2\xfc\xe3\xc4\x01+\x12)Name of the filesystem used on the volume\x12`\n\x16total_allocation_units\x18\x05 \x01(\x04\x42@\xe2\xfc\xe3\xc4\x01:\x12\x38Total number of allocation units available on the volume\x12\\\n\x1bsectors_per_allocation_unit\x18\x06 \x01(\x04\x42\x37\xe2\xfc\xe3\xc4\x01\x31\x12/Number of disk sectors for each allocation unit\x12Q\n\x10\x62ytes_per_sector\x18\x07 \x01(\x04\x42\x37\xe2\xfc\xe3\xc4\x01\x31\x12/Number of disk sectors for each allocation unit\x12\x65\n!actual_available_allocation_units\x18\x08 \x01(\x04\x42:\xe2\xfc\xe3\xc4\x01\x34\x12\x32Number of allocation units available on the volume\x12M\n\rcreation_time\x18\t \x01(\x04\x42\x36\xe2\xfc\xe3\xc4\x01\x30\n\x0bRDFDatetime\x12!Creation timestamp for the volume\x12\x61\n\x15\x66ile_system_flag_list\x18\n \x03(\x0e\x32 .Volume.VolumeFileSystemFlagEnumB \xe2\xfc\xe3\xc4\x01\x1a\x12\x18\x46lags set for the volume\x12:\n\rserial_number\x18\x0b \x01(\tB#\xe2\xfc\xe3\xc4\x01\x1d\x12\x1bSerial number of the volume\x12K\n\x07windows\x18\x0c \x01(\x0b\x32\x0e.WindowsVolumeB*\xe2\xfc\xe3\xc4\x01$\x12\"Windows specific volume attributes\x12\x42\n\x04unix\x18\r \x01(\x0b\x32\x0b.UnixVolumeB\'\xe2\xfc\xe3\xc4\x01!\x12\x1fUnix specific volume attributes\"\x9e\x05\n\x18VolumeFileSystemFlagEnum\x12\x1e\n\x1a\x46ILE_CASE_SENSITIVE_SEARCH\x10\x01\x12\x1d\n\x19\x46ILE_CASE_PRESERVED_NAMES\x10\x02\x12\x18\n\x14\x46ILE_UNICODE_ON_DISK\x10\x03\x12\x18\n\x14\x46ILE_PERSISTENT_ACLS\x10\x04\x12\x19\n\x15\x46ILE_FILE_COMPRESSION\x10\x05\x12\x16\n\x12\x46ILE_VOLUME_QUOTAS\x10\x06\x12\x1e\n\x1a\x46ILE_SUPPORTS_SPARSE_FILES\x10\x07\x12 \n\x1c\x46ILE_SUPPORTS_REPARSE_POINTS\x10\x08\x12 \n\x1c\x46ILE_SUPPORTS_REMOTE_STORAGE\x10\t\x12\x1d\n\x19\x46ILE_VOLUME_IS_COMPRESSED\x10\n\x12\x1c\n\x18\x46ILE_SUPPORTS_OBJECT_IDS\x10\x0b\x12\x1c\n\x18\x46ILE_SUPPORTS_ENCRYPTION\x10\x0c\x12\x16\n\x12\x46ILE_NAMED_STREAMS\x10\r\x12\x19\n\x15\x46ILE_READ_ONLY_VOLUME\x10\x0e\x12\x1e\n\x1a\x46ILE_SEQUENTIAL_WRITE_ONCE\x10\x0f\x12\x1e\n\x1a\x46ILE_SUPPORTS_TRANSACTIONS\x10\x10\x12\x1c\n\x18\x46ILE_SUPPORTS_HARD_LINKS\x10\x11\x12%\n!FILE_SUPPORTS_EXTENDED_ATTRIBUTES\x10\x12\x12!\n\x1d\x46ILE_SUPPORTS_OPEN_BY_FILE_ID\x10\x13\x12\x1d\n\x19\x46ILE_SUPPORTS_USN_JOURNAL\x10\x14\x12#\n\x1f\x46ILE_SUPPORTS_INTEGRITY_STREAMS\x10\x15\"\x81\x04\n\rWindowsVolume\x12\x64\n\x0f\x61ttributes_list\x18\x01 \x03(\x0e\x32).WindowsVolume.WindowsVolumeAttributeEnumB \xe2\xfc\xe3\xc4\x01\x1a\x12\x18\x41ttributes of the volume\x12\x32\n\x0c\x64rive_letter\x18\x02 \x01(\tB\x1c\xe2\xfc\xe3\xc4\x01\x16\x12\x14Windows drive letter\x12U\n\ndrive_type\x18\x03 \x01(\x0e\x32#.WindowsVolume.WindowsDriveTypeEnumB\x1c\xe2\xfc\xe3\xc4\x01\x16\x12\x14Windows drive letter\"`\n\x1aWindowsVolumeAttributeEnum\x12\x0c\n\x08READONLY\x10\x00\x12\n\n\x06HIDDEN\x10\x01\x12\x18\n\x14NODEFAULTDRIVELETTER\x10\x02\x12\x0e\n\nSHADOWCOPY\x10\x03\"\x9c\x01\n\x14WindowsDriveTypeEnum\x12\x11\n\rDRIVE_UNKNOWN\x10\x00\x12\x15\n\x11\x44RIVE_NO_ROOT_DIR\x10\x01\x12\x13\n\x0f\x44RIVE_REMOVABLE\x10\x02\x12\x0f\n\x0b\x44RIVE_FIXED\x10\x03\x12\x10\n\x0c\x44RIVE_REMOTE\x10\x04\x12\x0f\n\x0b\x44RIVE_CDROM\x10\x05\x12\x11\n\rDRIVE_RAMDISK\x10\x06\"v\n\nUnixVolume\x12(\n\x0bmount_point\x18\x01 \x01(\tB\x13\xe2\xfc\xe3\xc4\x01\r\x12\x0bMount point\x12>\n\x07options\x18\x02 \x01(\tB-\xe2\xfc\xe3\xc4\x01\'\x12%Options used when mounting the volume')



_NETWORKCONNECTION_FAMILY = _descriptor.EnumDescriptor(
  name='Family',
  full_name='NetworkConnection.Family',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INET', index=0, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INET6', index=1, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INET6_WIN', index=2, number=23,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INET6_OSX', index=3, number=30,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=939,
  serialized_end=998,
)

_NETWORKCONNECTION_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='NetworkConnection.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_SOCKET', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SOCK_STREAM', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SOCK_DGRAM', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1000,
  serialized_end=1059,
)

_NETWORKCONNECTION_STATE = _descriptor.EnumDescriptor(
  name='State',
  full_name='NetworkConnection.State',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOSED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LISTEN', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SYN_SENT', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SYN_RECV', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ESTABLISHED', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FIN_WAIT1', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FIN_WAIT2', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOSE_WAIT', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOSING', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LAST_ACK', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TIME_WAIT', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELETE_TCB', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NONE', index=13, number=13,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1062,
  serialized_end=1265,
)

_WINDOWSSERVICEINFORMATION_ERRORCONTROL = _descriptor.EnumDescriptor(
  name='ErrorControl',
  full_name='WindowsServiceInformation.ErrorControl',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CRITICAL', index=0, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SEVERE', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NORMAL', index=2, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IGNORE', index=3, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2743,
  serialized_end=2807,
)

_WINDOWSSERVICEINFORMATION_SERVICEMODE = _descriptor.EnumDescriptor(
  name='ServiceMode',
  full_name='WindowsServiceInformation.ServiceMode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SERVICE_BOOT_START', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SERVICE_SYSTEM_START', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SERVICE_AUTO_START', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SERVICE_DEMAND_START', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SERVICE_DISABLED', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2810,
  serialized_end=2945,
)

_WINDOWSSERVICEINFORMATION_SERVICETYPE = _descriptor.EnumDescriptor(
  name='ServiceType',
  full_name='WindowsServiceInformation.ServiceType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SERVICE_KERNEL_DRIVER', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SERVICE_FILE_SYSTEM_DRIVER', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SERVICE_ADAPTER_ARGS', index=2, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SERVICE_WIN32_OWN_PROCESS', index=3, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SERVICE_WIN32_SHARE_PROCESS', index=4, number=32,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2948,
  serialized_end=3110,
)

_SOFTWAREPACKAGE_INSTALLSTATE = _descriptor.EnumDescriptor(
  name='InstallState',
  full_name='SoftwarePackage.InstallState',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INSTALLED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PENDING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNINSTALLED', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=4375,
  serialized_end=4447,
)

_VOLUME_VOLUMEFILESYSTEMFLAGENUM = _descriptor.EnumDescriptor(
  name='VolumeFileSystemFlagEnum',
  full_name='Volume.VolumeFileSystemFlagEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FILE_CASE_SENSITIVE_SEARCH', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_CASE_PRESERVED_NAMES', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_UNICODE_ON_DISK', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_PERSISTENT_ACLS', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_FILE_COMPRESSION', index=4, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_VOLUME_QUOTAS', index=5, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_SUPPORTS_SPARSE_FILES', index=6, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_SUPPORTS_REPARSE_POINTS', index=7, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_SUPPORTS_REMOTE_STORAGE', index=8, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_VOLUME_IS_COMPRESSED', index=9, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_SUPPORTS_OBJECT_IDS', index=10, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_SUPPORTS_ENCRYPTION', index=11, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_NAMED_STREAMS', index=12, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_READ_ONLY_VOLUME', index=13, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_SEQUENTIAL_WRITE_ONCE', index=14, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_SUPPORTS_TRANSACTIONS', index=15, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_SUPPORTS_HARD_LINKS', index=16, number=17,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_SUPPORTS_EXTENDED_ATTRIBUTES', index=17, number=18,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_SUPPORTS_OPEN_BY_FILE_ID', index=18, number=19,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_SUPPORTS_USN_JOURNAL', index=19, number=20,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_SUPPORTS_INTEGRITY_STREAMS', index=20, number=21,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=6034,
  serialized_end=6704,
)

_WINDOWSVOLUME_WINDOWSVOLUMEATTRIBUTEENUM = _descriptor.EnumDescriptor(
  name='WindowsVolumeAttributeEnum',
  full_name='WindowsVolume.WindowsVolumeAttributeEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='READONLY', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HIDDEN', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NODEFAULTDRIVELETTER', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SHADOWCOPY', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=6965,
  serialized_end=7061,
)

_WINDOWSVOLUME_WINDOWSDRIVETYPEENUM = _descriptor.EnumDescriptor(
  name='WindowsDriveTypeEnum',
  full_name='WindowsVolume.WindowsDriveTypeEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DRIVE_UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DRIVE_NO_ROOT_DIR', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DRIVE_REMOVABLE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DRIVE_FIXED', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DRIVE_REMOTE', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DRIVE_CDROM', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DRIVE_RAMDISK', index=6, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=7064,
  serialized_end=7220,
)


_PROCESS = _descriptor.Descriptor(
  name='Process',
  full_name='Process',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pid', full_name='Process.pid', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ppid', full_name='Process.ppid', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='Process.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exe', full_name='Process.exe', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cmdline', full_name='Process.cmdline', index=4,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ctime', full_name='Process.ctime', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='real_uid', full_name='Process.real_uid', index=6,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='effective_uid', full_name='Process.effective_uid', index=7,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='saved_uid', full_name='Process.saved_uid', index=8,
      number=9, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='real_gid', full_name='Process.real_gid', index=9,
      number=10, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='effective_gid', full_name='Process.effective_gid', index=10,
      number=11, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='saved_gid', full_name='Process.saved_gid', index=11,
      number=12, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='username', full_name='Process.username', index=12,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='terminal', full_name='Process.terminal', index=13,
      number=14, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='Process.status', index=14,
      number=15, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nice', full_name='Process.nice', index=15,
      number=16, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cwd', full_name='Process.cwd', index=16,
      number=17, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_threads', full_name='Process.num_threads', index=17,
      number=18, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user_cpu_time', full_name='Process.user_cpu_time', index=18,
      number=19, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='system_cpu_time', full_name='Process.system_cpu_time', index=19,
      number=20, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cpu_percent', full_name='Process.cpu_percent', index=20,
      number=21, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='RSS_size', full_name='Process.RSS_size', index=21,
      number=22, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='VMS_size', full_name='Process.VMS_size', index=22,
      number=23, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='memory_percent', full_name='Process.memory_percent', index=23,
      number=24, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='open_files', full_name='Process.open_files', index=24,
      number=25, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='connections', full_name='Process.connections', index=25,
      number=26, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\332\374\343\304\001\026\n\024Process information.'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=76,
  serialized_end=611,
)


_NETWORKENDPOINT = _descriptor.Descriptor(
  name='NetworkEndpoint',
  full_name='NetworkEndpoint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip', full_name='NetworkEndpoint.ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port', full_name='NetworkEndpoint.port', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=613,
  serialized_end=656,
)


_NETWORKCONNECTION = _descriptor.Descriptor(
  name='NetworkConnection',
  full_name='NetworkConnection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='family', full_name='NetworkConnection.family', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=2,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='NetworkConnection.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='local_address', full_name='NetworkConnection.local_address', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='remote_address', full_name='NetworkConnection.remote_address', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='NetworkConnection.state', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pid', full_name='NetworkConnection.pid', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ctime', full_name='NetworkConnection.ctime', index=6,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _NETWORKCONNECTION_FAMILY,
    _NETWORKCONNECTION_TYPE,
    _NETWORKCONNECTION_STATE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=659,
  serialized_end=1265,
)


_FILESYSTEM = _descriptor.Descriptor(
  name='Filesystem',
  full_name='Filesystem',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device', full_name='Filesystem.device', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mount_point', full_name='Filesystem.mount_point', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='Filesystem.type', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label', full_name='Filesystem.label', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1267,
  serialized_end=1345,
)


_MRUFILE = _descriptor.Descriptor(
  name='MRUFile',
  full_name='MRUFile',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filename', full_name='MRUFile.filename', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='MRUFile.timestamp', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1347,
  serialized_end=1396,
)


_RUNKEY = _descriptor.Descriptor(
  name='RunKey',
  full_name='RunKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='keyname', full_name='RunKey.keyname', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='filepath', full_name='RunKey.filepath', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastwritten', full_name='RunKey.lastwritten', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1398,
  serialized_end=1465,
)


_WINDOWSSERVICEINFORMATION = _descriptor.Descriptor(
  name='WindowsServiceInformation',
  full_name='WindowsServiceInformation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='WindowsServiceInformation.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\032\022\030The name of the service.')),
    _descriptor.FieldDescriptor(
      name='description', full_name='WindowsServiceInformation.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001(\022&The description string of the service.')),
    _descriptor.FieldDescriptor(
      name='binary', full_name='WindowsServiceInformation.binary', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001b\022`The binary on the client. This may also contain an AFF4 urn to the server copy of the same file.')),
    _descriptor.FieldDescriptor(
      name='state', full_name='WindowsServiceInformation.state', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\037\022\035Current state of the service.')),
    _descriptor.FieldDescriptor(
      name='wmi_information', full_name='WindowsServiceInformation.wmi_information', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001/\022-Additional information available through WMI.')),
    _descriptor.FieldDescriptor(
      name='display_name', full_name='WindowsServiceInformation.display_name', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0018\0226Displayed name of the service in Windows GUI controls.')),
    _descriptor.FieldDescriptor(
      name='driver_package_id', full_name='WindowsServiceInformation.driver_package_id', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001#\022!Driver Package ID of the service.')),
    _descriptor.FieldDescriptor(
      name='error_control', full_name='WindowsServiceInformation.error_control', index=7,
      number=8, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=3,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0018\0226Behaviour of the service on failure to load/initialize')),
    _descriptor.FieldDescriptor(
      name='image_path', full_name='WindowsServiceInformation.image_path', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\033\022\031ImagePath of the service.')),
    _descriptor.FieldDescriptor(
      name='object_name', full_name='WindowsServiceInformation.object_name', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\034\022\032ObjectName of the service.')),
    _descriptor.FieldDescriptor(
      name='startup_type', full_name='WindowsServiceInformation.startup_type', index=10,
      number=11, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\027\022\025Service start options')),
    _descriptor.FieldDescriptor(
      name='service_type', full_name='WindowsServiceInformation.service_type', index=11,
      number=12, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\026\022\024Type of the service.')),
    _descriptor.FieldDescriptor(
      name='group_name', full_name='WindowsServiceInformation.group_name', index=12,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001R\022PSpecifies the name of the load ordering group of which this service is a member.')),
    _descriptor.FieldDescriptor(
      name='service_dll', full_name='WindowsServiceInformation.service_dll', index=13,
      number=14, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001.\022,Name of the DLL instantiated in the service.')),
    _descriptor.FieldDescriptor(
      name='registry_key', full_name='WindowsServiceInformation.registry_key', index=14,
      number=15, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0019\n\006RDFURN\022/The AFF4 location for the service registry key.')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _WINDOWSSERVICEINFORMATION_ERRORCONTROL,
    _WINDOWSSERVICEINFORMATION_SERVICEMODE,
    _WINDOWSSERVICEINFORMATION_SERVICETYPE,
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\332\374\343\304\001\270\001\n\265\001Describe a windows service or driver. Field names follow the cybox naming scheme where possible: http://cybox.mitre.org/language/version2.0.1/xsddocs/objects/Win_Service_Object.html'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1468,
  serialized_end=3304,
)


_OSXSERVICEINFORMATION = _descriptor.Descriptor(
  name='OSXServiceInformation',
  full_name='OSXServiceInformation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='OSXServiceInformation.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\020\022\016Service label.')),
    _descriptor.FieldDescriptor(
      name='program', full_name='OSXServiceInformation.program', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\"\022 Program path run by the service.')),
    _descriptor.FieldDescriptor(
      name='args', full_name='OSXServiceInformation.args', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001C\022AProgram args.  May also include executable if Program is not set.')),
    _descriptor.FieldDescriptor(
      name='pid', full_name='OSXServiceInformation.pid', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\025\022\023Current service PID')),
    _descriptor.FieldDescriptor(
      name='sessiontype', full_name='OSXServiceInformation.sessiontype', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0015\0223SessionType: Aqua|StandardIO|Background|LoginWindow')),
    _descriptor.FieldDescriptor(
      name='lastexitstatus', full_name='OSXServiceInformation.lastexitstatus', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001#\022!Last exit return code of service.')),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='OSXServiceInformation.timeout', index=6,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\022\022\020Service timeout.')),
    _descriptor.FieldDescriptor(
      name='ondemand', full_name='OSXServiceInformation.ondemand', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001,\022*True if the service should start ondemand.')),
    _descriptor.FieldDescriptor(
      name='machservice', full_name='OSXServiceInformation.machservice', index=8,
      number=9, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001*\022(Machservices advertised by this service.')),
    _descriptor.FieldDescriptor(
      name='perjobmachservice', full_name='OSXServiceInformation.perjobmachservice', index=9,
      number=10, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001*\022(Machservices advertised by this service.')),
    _descriptor.FieldDescriptor(
      name='socket', full_name='OSXServiceInformation.socket', index=10,
      number=11, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\037\022\035Sockets used by this service.')),
    _descriptor.FieldDescriptor(
      name='plist', full_name='OSXServiceInformation.plist', index=11,
      number=15, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0012\n\006RDFURN\022(The AFF4 location for the service plist.')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\332\374\343\304\0010\n.Describe an OS X service (launchagent/daemon).'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=3307,
  serialized_end=4153,
)


_SOFTWAREPACKAGE = _descriptor.Descriptor(
  name='SoftwarePackage',
  full_name='SoftwarePackage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='SoftwarePackage.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='version', full_name='SoftwarePackage.version', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='architecture', full_name='SoftwarePackage.architecture', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='publisher', full_name='SoftwarePackage.publisher', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='install_state', full_name='SoftwarePackage.install_state', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=3,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='SoftwarePackage.description', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='installed_on', full_name='SoftwarePackage.installed_on', index=6,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='installed_by', full_name='SoftwarePackage.installed_by', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SOFTWAREPACKAGE_INSTALLSTATE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=4156,
  serialized_end=4447,
)


_BROWSERHISTORYITEM = _descriptor.Descriptor(
  name='BrowserHistoryItem',
  full_name='BrowserHistoryItem',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url', full_name='BrowserHistoryItem.url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\022\022\020The URL visited.')),
    _descriptor.FieldDescriptor(
      name='domain', full_name='BrowserHistoryItem.domain', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\027\022\025Domain name accessed.')),
    _descriptor.FieldDescriptor(
      name='access_time', full_name='BrowserHistoryItem.access_time', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001)\n\013RDFDatetime\022\032Time the URL was accessed.')),
    _descriptor.FieldDescriptor(
      name='referrer', full_name='BrowserHistoryItem.referrer', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\036\022\034Referrer used for the access')),
    _descriptor.FieldDescriptor(
      name='title', full_name='BrowserHistoryItem.title', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001+\022)Title attribute of the page if available.')),
    _descriptor.FieldDescriptor(
      name='program_name', full_name='BrowserHistoryItem.program_name', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001<\022:Name of the program that generated the entry, e.g. Chrome.')),
    _descriptor.FieldDescriptor(
      name='source_urn', full_name='BrowserHistoryItem.source_urn', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001:\n\006RDFURN\0220Location of object that this entry was found in.')),
    _descriptor.FieldDescriptor(
      name='download_path', full_name='BrowserHistoryItem.download_path', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\032\022\030Path of downloaded file.')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=4450,
  serialized_end=4981,
)


_VOLUME = _descriptor.Descriptor(
  name='Volume',
  full_name='Volume',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_mounted', full_name='Volume.is_mounted', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\037\022\035True if the volume is mounted')),
    _descriptor.FieldDescriptor(
      name='name', full_name='Volume.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\030\022\026The name of the volume')),
    _descriptor.FieldDescriptor(
      name='device_path', full_name='Volume.device_path', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001C\022AFull path to the volume, including the device on which it resides')),
    _descriptor.FieldDescriptor(
      name='file_system_type', full_name='Volume.file_system_type', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001+\022)Name of the filesystem used on the volume')),
    _descriptor.FieldDescriptor(
      name='total_allocation_units', full_name='Volume.total_allocation_units', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001:\0228Total number of allocation units available on the volume')),
    _descriptor.FieldDescriptor(
      name='sectors_per_allocation_unit', full_name='Volume.sectors_per_allocation_unit', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0011\022/Number of disk sectors for each allocation unit')),
    _descriptor.FieldDescriptor(
      name='bytes_per_sector', full_name='Volume.bytes_per_sector', index=6,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0011\022/Number of disk sectors for each allocation unit')),
    _descriptor.FieldDescriptor(
      name='actual_available_allocation_units', full_name='Volume.actual_available_allocation_units', index=7,
      number=8, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0014\0222Number of allocation units available on the volume')),
    _descriptor.FieldDescriptor(
      name='creation_time', full_name='Volume.creation_time', index=8,
      number=9, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0010\n\013RDFDatetime\022!Creation timestamp for the volume')),
    _descriptor.FieldDescriptor(
      name='file_system_flag_list', full_name='Volume.file_system_flag_list', index=9,
      number=10, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\032\022\030Flags set for the volume')),
    _descriptor.FieldDescriptor(
      name='serial_number', full_name='Volume.serial_number', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\035\022\033Serial number of the volume')),
    _descriptor.FieldDescriptor(
      name='windows', full_name='Volume.windows', index=11,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001$\022\"Windows specific volume attributes')),
    _descriptor.FieldDescriptor(
      name='unix', full_name='Volume.unix', index=12,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001!\022\037Unix specific volume attributes')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _VOLUME_VOLUMEFILESYSTEMFLAGENUM,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=4984,
  serialized_end=6704,
)


_WINDOWSVOLUME = _descriptor.Descriptor(
  name='WindowsVolume',
  full_name='WindowsVolume',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='attributes_list', full_name='WindowsVolume.attributes_list', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\032\022\030Attributes of the volume')),
    _descriptor.FieldDescriptor(
      name='drive_letter', full_name='WindowsVolume.drive_letter', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\026\022\024Windows drive letter')),
    _descriptor.FieldDescriptor(
      name='drive_type', full_name='WindowsVolume.drive_type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\026\022\024Windows drive letter')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _WINDOWSVOLUME_WINDOWSVOLUMEATTRIBUTEENUM,
    _WINDOWSVOLUME_WINDOWSDRIVETYPEENUM,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=6707,
  serialized_end=7220,
)


_UNIXVOLUME = _descriptor.Descriptor(
  name='UnixVolume',
  full_name='UnixVolume',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mount_point', full_name='UnixVolume.mount_point', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\r\022\013Mount point')),
    _descriptor.FieldDescriptor(
      name='options', full_name='UnixVolume.options', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\'\022%Options used when mounting the volume')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=7222,
  serialized_end=7340,
)

_PROCESS.fields_by_name['connections'].message_type = _NETWORKCONNECTION
_NETWORKCONNECTION.fields_by_name['family'].enum_type = _NETWORKCONNECTION_FAMILY
_NETWORKCONNECTION.fields_by_name['type'].enum_type = _NETWORKCONNECTION_TYPE
_NETWORKCONNECTION.fields_by_name['local_address'].message_type = _NETWORKENDPOINT
_NETWORKCONNECTION.fields_by_name['remote_address'].message_type = _NETWORKENDPOINT
_NETWORKCONNECTION.fields_by_name['state'].enum_type = _NETWORKCONNECTION_STATE
_NETWORKCONNECTION_FAMILY.containing_type = _NETWORKCONNECTION;
_NETWORKCONNECTION_TYPE.containing_type = _NETWORKCONNECTION;
_NETWORKCONNECTION_STATE.containing_type = _NETWORKCONNECTION;
_WINDOWSSERVICEINFORMATION.fields_by_name['binary'].message_type = grr.proto.jobs_pb2._STATENTRY
_WINDOWSSERVICEINFORMATION.fields_by_name['wmi_information'].message_type = grr.proto.jobs_pb2._DICT
_WINDOWSSERVICEINFORMATION.fields_by_name['error_control'].enum_type = _WINDOWSSERVICEINFORMATION_ERRORCONTROL
_WINDOWSSERVICEINFORMATION.fields_by_name['startup_type'].enum_type = _WINDOWSSERVICEINFORMATION_SERVICEMODE
_WINDOWSSERVICEINFORMATION.fields_by_name['service_type'].enum_type = _WINDOWSSERVICEINFORMATION_SERVICETYPE
_WINDOWSSERVICEINFORMATION_ERRORCONTROL.containing_type = _WINDOWSSERVICEINFORMATION;
_WINDOWSSERVICEINFORMATION_SERVICEMODE.containing_type = _WINDOWSSERVICEINFORMATION;
_WINDOWSSERVICEINFORMATION_SERVICETYPE.containing_type = _WINDOWSSERVICEINFORMATION;
_SOFTWAREPACKAGE.fields_by_name['install_state'].enum_type = _SOFTWAREPACKAGE_INSTALLSTATE
_SOFTWAREPACKAGE_INSTALLSTATE.containing_type = _SOFTWAREPACKAGE;
_VOLUME.fields_by_name['file_system_flag_list'].enum_type = _VOLUME_VOLUMEFILESYSTEMFLAGENUM
_VOLUME.fields_by_name['windows'].message_type = _WINDOWSVOLUME
_VOLUME.fields_by_name['unix'].message_type = _UNIXVOLUME
_VOLUME_VOLUMEFILESYSTEMFLAGENUM.containing_type = _VOLUME;
_WINDOWSVOLUME.fields_by_name['attributes_list'].enum_type = _WINDOWSVOLUME_WINDOWSVOLUMEATTRIBUTEENUM
_WINDOWSVOLUME.fields_by_name['drive_type'].enum_type = _WINDOWSVOLUME_WINDOWSDRIVETYPEENUM
_WINDOWSVOLUME_WINDOWSVOLUMEATTRIBUTEENUM.containing_type = _WINDOWSVOLUME;
_WINDOWSVOLUME_WINDOWSDRIVETYPEENUM.containing_type = _WINDOWSVOLUME;
DESCRIPTOR.message_types_by_name['Process'] = _PROCESS
DESCRIPTOR.message_types_by_name['NetworkEndpoint'] = _NETWORKENDPOINT
DESCRIPTOR.message_types_by_name['NetworkConnection'] = _NETWORKCONNECTION
DESCRIPTOR.message_types_by_name['Filesystem'] = _FILESYSTEM
DESCRIPTOR.message_types_by_name['MRUFile'] = _MRUFILE
DESCRIPTOR.message_types_by_name['RunKey'] = _RUNKEY
DESCRIPTOR.message_types_by_name['WindowsServiceInformation'] = _WINDOWSSERVICEINFORMATION
DESCRIPTOR.message_types_by_name['OSXServiceInformation'] = _OSXSERVICEINFORMATION
DESCRIPTOR.message_types_by_name['SoftwarePackage'] = _SOFTWAREPACKAGE
DESCRIPTOR.message_types_by_name['BrowserHistoryItem'] = _BROWSERHISTORYITEM
DESCRIPTOR.message_types_by_name['Volume'] = _VOLUME
DESCRIPTOR.message_types_by_name['WindowsVolume'] = _WINDOWSVOLUME
DESCRIPTOR.message_types_by_name['UnixVolume'] = _UNIXVOLUME

class Process(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _PROCESS

  # @@protoc_insertion_point(class_scope:Process)

class NetworkEndpoint(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _NETWORKENDPOINT

  # @@protoc_insertion_point(class_scope:NetworkEndpoint)

class NetworkConnection(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _NETWORKCONNECTION

  # @@protoc_insertion_point(class_scope:NetworkConnection)

class Filesystem(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _FILESYSTEM

  # @@protoc_insertion_point(class_scope:Filesystem)

class MRUFile(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MRUFILE

  # @@protoc_insertion_point(class_scope:MRUFile)

class RunKey(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _RUNKEY

  # @@protoc_insertion_point(class_scope:RunKey)

class WindowsServiceInformation(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _WINDOWSSERVICEINFORMATION

  # @@protoc_insertion_point(class_scope:WindowsServiceInformation)

class OSXServiceInformation(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _OSXSERVICEINFORMATION

  # @@protoc_insertion_point(class_scope:OSXServiceInformation)

class SoftwarePackage(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SOFTWAREPACKAGE

  # @@protoc_insertion_point(class_scope:SoftwarePackage)

class BrowserHistoryItem(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _BROWSERHISTORYITEM

  # @@protoc_insertion_point(class_scope:BrowserHistoryItem)

class Volume(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _VOLUME

  # @@protoc_insertion_point(class_scope:Volume)

class WindowsVolume(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _WINDOWSVOLUME

  # @@protoc_insertion_point(class_scope:WindowsVolume)

class UnixVolume(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _UNIXVOLUME

  # @@protoc_insertion_point(class_scope:UnixVolume)


_PROCESS.has_options = True
_PROCESS._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\332\374\343\304\001\026\n\024Process information.')
_WINDOWSSERVICEINFORMATION.fields_by_name['name'].has_options = True
_WINDOWSSERVICEINFORMATION.fields_by_name['name']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\032\022\030The name of the service.')
_WINDOWSSERVICEINFORMATION.fields_by_name['description'].has_options = True
_WINDOWSSERVICEINFORMATION.fields_by_name['description']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001(\022&The description string of the service.')
_WINDOWSSERVICEINFORMATION.fields_by_name['binary'].has_options = True
_WINDOWSSERVICEINFORMATION.fields_by_name['binary']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001b\022`The binary on the client. This may also contain an AFF4 urn to the server copy of the same file.')
_WINDOWSSERVICEINFORMATION.fields_by_name['state'].has_options = True
_WINDOWSSERVICEINFORMATION.fields_by_name['state']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\037\022\035Current state of the service.')
_WINDOWSSERVICEINFORMATION.fields_by_name['wmi_information'].has_options = True
_WINDOWSSERVICEINFORMATION.fields_by_name['wmi_information']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001/\022-Additional information available through WMI.')
_WINDOWSSERVICEINFORMATION.fields_by_name['display_name'].has_options = True
_WINDOWSSERVICEINFORMATION.fields_by_name['display_name']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0018\0226Displayed name of the service in Windows GUI controls.')
_WINDOWSSERVICEINFORMATION.fields_by_name['driver_package_id'].has_options = True
_WINDOWSSERVICEINFORMATION.fields_by_name['driver_package_id']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001#\022!Driver Package ID of the service.')
_WINDOWSSERVICEINFORMATION.fields_by_name['error_control'].has_options = True
_WINDOWSSERVICEINFORMATION.fields_by_name['error_control']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0018\0226Behaviour of the service on failure to load/initialize')
_WINDOWSSERVICEINFORMATION.fields_by_name['image_path'].has_options = True
_WINDOWSSERVICEINFORMATION.fields_by_name['image_path']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\033\022\031ImagePath of the service.')
_WINDOWSSERVICEINFORMATION.fields_by_name['object_name'].has_options = True
_WINDOWSSERVICEINFORMATION.fields_by_name['object_name']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\034\022\032ObjectName of the service.')
_WINDOWSSERVICEINFORMATION.fields_by_name['startup_type'].has_options = True
_WINDOWSSERVICEINFORMATION.fields_by_name['startup_type']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\027\022\025Service start options')
_WINDOWSSERVICEINFORMATION.fields_by_name['service_type'].has_options = True
_WINDOWSSERVICEINFORMATION.fields_by_name['service_type']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\026\022\024Type of the service.')
_WINDOWSSERVICEINFORMATION.fields_by_name['group_name'].has_options = True
_WINDOWSSERVICEINFORMATION.fields_by_name['group_name']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001R\022PSpecifies the name of the load ordering group of which this service is a member.')
_WINDOWSSERVICEINFORMATION.fields_by_name['service_dll'].has_options = True
_WINDOWSSERVICEINFORMATION.fields_by_name['service_dll']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001.\022,Name of the DLL instantiated in the service.')
_WINDOWSSERVICEINFORMATION.fields_by_name['registry_key'].has_options = True
_WINDOWSSERVICEINFORMATION.fields_by_name['registry_key']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0019\n\006RDFURN\022/The AFF4 location for the service registry key.')
_WINDOWSSERVICEINFORMATION.has_options = True
_WINDOWSSERVICEINFORMATION._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\332\374\343\304\001\270\001\n\265\001Describe a windows service or driver. Field names follow the cybox naming scheme where possible: http://cybox.mitre.org/language/version2.0.1/xsddocs/objects/Win_Service_Object.html')
_OSXSERVICEINFORMATION.fields_by_name['label'].has_options = True
_OSXSERVICEINFORMATION.fields_by_name['label']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\020\022\016Service label.')
_OSXSERVICEINFORMATION.fields_by_name['program'].has_options = True
_OSXSERVICEINFORMATION.fields_by_name['program']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\"\022 Program path run by the service.')
_OSXSERVICEINFORMATION.fields_by_name['args'].has_options = True
_OSXSERVICEINFORMATION.fields_by_name['args']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001C\022AProgram args.  May also include executable if Program is not set.')
_OSXSERVICEINFORMATION.fields_by_name['pid'].has_options = True
_OSXSERVICEINFORMATION.fields_by_name['pid']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\025\022\023Current service PID')
_OSXSERVICEINFORMATION.fields_by_name['sessiontype'].has_options = True
_OSXSERVICEINFORMATION.fields_by_name['sessiontype']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0015\0223SessionType: Aqua|StandardIO|Background|LoginWindow')
_OSXSERVICEINFORMATION.fields_by_name['lastexitstatus'].has_options = True
_OSXSERVICEINFORMATION.fields_by_name['lastexitstatus']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001#\022!Last exit return code of service.')
_OSXSERVICEINFORMATION.fields_by_name['timeout'].has_options = True
_OSXSERVICEINFORMATION.fields_by_name['timeout']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\022\022\020Service timeout.')
_OSXSERVICEINFORMATION.fields_by_name['ondemand'].has_options = True
_OSXSERVICEINFORMATION.fields_by_name['ondemand']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001,\022*True if the service should start ondemand.')
_OSXSERVICEINFORMATION.fields_by_name['machservice'].has_options = True
_OSXSERVICEINFORMATION.fields_by_name['machservice']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001*\022(Machservices advertised by this service.')
_OSXSERVICEINFORMATION.fields_by_name['perjobmachservice'].has_options = True
_OSXSERVICEINFORMATION.fields_by_name['perjobmachservice']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001*\022(Machservices advertised by this service.')
_OSXSERVICEINFORMATION.fields_by_name['socket'].has_options = True
_OSXSERVICEINFORMATION.fields_by_name['socket']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\037\022\035Sockets used by this service.')
_OSXSERVICEINFORMATION.fields_by_name['plist'].has_options = True
_OSXSERVICEINFORMATION.fields_by_name['plist']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0012\n\006RDFURN\022(The AFF4 location for the service plist.')
_OSXSERVICEINFORMATION.has_options = True
_OSXSERVICEINFORMATION._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\332\374\343\304\0010\n.Describe an OS X service (launchagent/daemon).')
_BROWSERHISTORYITEM.fields_by_name['url'].has_options = True
_BROWSERHISTORYITEM.fields_by_name['url']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\022\022\020The URL visited.')
_BROWSERHISTORYITEM.fields_by_name['domain'].has_options = True
_BROWSERHISTORYITEM.fields_by_name['domain']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\027\022\025Domain name accessed.')
_BROWSERHISTORYITEM.fields_by_name['access_time'].has_options = True
_BROWSERHISTORYITEM.fields_by_name['access_time']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001)\n\013RDFDatetime\022\032Time the URL was accessed.')
_BROWSERHISTORYITEM.fields_by_name['referrer'].has_options = True
_BROWSERHISTORYITEM.fields_by_name['referrer']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\036\022\034Referrer used for the access')
_BROWSERHISTORYITEM.fields_by_name['title'].has_options = True
_BROWSERHISTORYITEM.fields_by_name['title']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001+\022)Title attribute of the page if available.')
_BROWSERHISTORYITEM.fields_by_name['program_name'].has_options = True
_BROWSERHISTORYITEM.fields_by_name['program_name']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001<\022:Name of the program that generated the entry, e.g. Chrome.')
_BROWSERHISTORYITEM.fields_by_name['source_urn'].has_options = True
_BROWSERHISTORYITEM.fields_by_name['source_urn']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001:\n\006RDFURN\0220Location of object that this entry was found in.')
_BROWSERHISTORYITEM.fields_by_name['download_path'].has_options = True
_BROWSERHISTORYITEM.fields_by_name['download_path']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\032\022\030Path of downloaded file.')
_VOLUME.fields_by_name['is_mounted'].has_options = True
_VOLUME.fields_by_name['is_mounted']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\037\022\035True if the volume is mounted')
_VOLUME.fields_by_name['name'].has_options = True
_VOLUME.fields_by_name['name']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\030\022\026The name of the volume')
_VOLUME.fields_by_name['device_path'].has_options = True
_VOLUME.fields_by_name['device_path']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001C\022AFull path to the volume, including the device on which it resides')
_VOLUME.fields_by_name['file_system_type'].has_options = True
_VOLUME.fields_by_name['file_system_type']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001+\022)Name of the filesystem used on the volume')
_VOLUME.fields_by_name['total_allocation_units'].has_options = True
_VOLUME.fields_by_name['total_allocation_units']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001:\0228Total number of allocation units available on the volume')
_VOLUME.fields_by_name['sectors_per_allocation_unit'].has_options = True
_VOLUME.fields_by_name['sectors_per_allocation_unit']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0011\022/Number of disk sectors for each allocation unit')
_VOLUME.fields_by_name['bytes_per_sector'].has_options = True
_VOLUME.fields_by_name['bytes_per_sector']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0011\022/Number of disk sectors for each allocation unit')
_VOLUME.fields_by_name['actual_available_allocation_units'].has_options = True
_VOLUME.fields_by_name['actual_available_allocation_units']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0014\0222Number of allocation units available on the volume')
_VOLUME.fields_by_name['creation_time'].has_options = True
_VOLUME.fields_by_name['creation_time']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\0010\n\013RDFDatetime\022!Creation timestamp for the volume')
_VOLUME.fields_by_name['file_system_flag_list'].has_options = True
_VOLUME.fields_by_name['file_system_flag_list']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\032\022\030Flags set for the volume')
_VOLUME.fields_by_name['serial_number'].has_options = True
_VOLUME.fields_by_name['serial_number']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\035\022\033Serial number of the volume')
_VOLUME.fields_by_name['windows'].has_options = True
_VOLUME.fields_by_name['windows']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001$\022\"Windows specific volume attributes')
_VOLUME.fields_by_name['unix'].has_options = True
_VOLUME.fields_by_name['unix']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001!\022\037Unix specific volume attributes')
_WINDOWSVOLUME.fields_by_name['attributes_list'].has_options = True
_WINDOWSVOLUME.fields_by_name['attributes_list']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\032\022\030Attributes of the volume')
_WINDOWSVOLUME.fields_by_name['drive_letter'].has_options = True
_WINDOWSVOLUME.fields_by_name['drive_letter']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\026\022\024Windows drive letter')
_WINDOWSVOLUME.fields_by_name['drive_type'].has_options = True
_WINDOWSVOLUME.fields_by_name['drive_type']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\026\022\024Windows drive letter')
_UNIXVOLUME.fields_by_name['mount_point'].has_options = True
_UNIXVOLUME.fields_by_name['mount_point']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\r\022\013Mount point')
_UNIXVOLUME.fields_by_name['options'].has_options = True
_UNIXVOLUME.fields_by_name['options']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\342\374\343\304\001\'\022%Options used when mounting the volume')
# @@protoc_insertion_point(module_scope)
