# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)



DESCRIPTOR = descriptor.FileDescriptor(
  name='grr/proto/objectfilter.proto',
  package='',
  serialized_pb='\n\x1cgrr/proto/objectfilter.proto\"\xf5\x01\n\x0cObjectFilter\x12\x1f\n\x07\x66ilters\x18\x01 \x03(\x0b\x32\x0e.ConditionList\"\xc3\x01\n\nOperations\x12\t\n\x05OP_IS\x10\x01\x12\r\n\tOP_IS_NOT\x10\x02\x12\x0e\n\nOP_GREATER\x10\x03\x12\x14\n\x10OP_GREATER_EQUAL\x10\x04\x12\x0b\n\x07OP_LESS\x10\x05\x12\x11\n\rOP_LESS_EQUAL\x10\x06\x12\x0f\n\x0bOP_CONTAINS\x10\x07\x12\x13\n\x0fOP_NOT_CONTAINS\x10\x08\x12\r\n\tOP_IN_SET\x10\t\x12\x11\n\rOP_NOT_IN_SET\x10\n\x12\r\n\tOP_REGEXP\x10\x0b\"/\n\rConditionList\x12\x1e\n\nconditions\x18\x01 \x03(\x0b\x32\n.Condition\"3\n\tCondition\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\n\n\x02op\x18\x02 \x01(\x05\x12\r\n\x05value\x18\x03 \x01(\t')



_OBJECTFILTER_OPERATIONS = descriptor.EnumDescriptor(
  name='Operations',
  full_name='ObjectFilter.Operations',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='OP_IS', index=0, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='OP_IS_NOT', index=1, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='OP_GREATER', index=2, number=3,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='OP_GREATER_EQUAL', index=3, number=4,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='OP_LESS', index=4, number=5,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='OP_LESS_EQUAL', index=5, number=6,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='OP_CONTAINS', index=6, number=7,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='OP_NOT_CONTAINS', index=7, number=8,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='OP_IN_SET', index=8, number=9,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='OP_NOT_IN_SET', index=9, number=10,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='OP_REGEXP', index=10, number=11,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=83,
  serialized_end=278,
)


_OBJECTFILTER = descriptor.Descriptor(
  name='ObjectFilter',
  full_name='ObjectFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='filters', full_name='ObjectFilter.filters', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _OBJECTFILTER_OPERATIONS,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=33,
  serialized_end=278,
)


_CONDITIONLIST = descriptor.Descriptor(
  name='ConditionList',
  full_name='ConditionList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='conditions', full_name='ConditionList.conditions', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=280,
  serialized_end=327,
)


_CONDITION = descriptor.Descriptor(
  name='Condition',
  full_name='Condition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='key', full_name='Condition.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='op', full_name='Condition.op', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='value', full_name='Condition.value', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=329,
  serialized_end=380,
)

_OBJECTFILTER.fields_by_name['filters'].message_type = _CONDITIONLIST
_OBJECTFILTER_OPERATIONS.containing_type = _OBJECTFILTER;
_CONDITIONLIST.fields_by_name['conditions'].message_type = _CONDITION
DESCRIPTOR.message_types_by_name['ObjectFilter'] = _OBJECTFILTER
DESCRIPTOR.message_types_by_name['ConditionList'] = _CONDITIONLIST
DESCRIPTOR.message_types_by_name['Condition'] = _CONDITION

class ObjectFilter(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _OBJECTFILTER
  
  # @@protoc_insertion_point(class_scope:ObjectFilter)

class ConditionList(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CONDITIONLIST
  
  # @@protoc_insertion_point(class_scope:ConditionList)

class Condition(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CONDITION
  
  # @@protoc_insertion_point(class_scope:Condition)

# @@protoc_insertion_point(module_scope)
